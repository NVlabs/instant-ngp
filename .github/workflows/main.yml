name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build_linux:
    name: Build on linux systems
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            cuda: "11.7"
            arch: 86
            python: "3.11"
          - os: ubuntu-22.04
            cuda: "11.7"
            arch: 75
            python: "3.10"
          - os: ubuntu-22.04
            cuda: "11.7"
            arch: 70
            python: "3.9"
          - os: ubuntu-22.04
            cuda: "11.7"
            arch: 61
            python: "3.8"
          - os: ubuntu-22.04
            cuda: "11.7"
            arch: 53
            python: "3.7"
          - os: ubuntu-22.04
            cuda: "11.7"
            arch: 37
            python: "3.7"
            cmake_flags: "-DNGP_BUILD_WITH_GUI=OFF -DNGP_BUILD_WITH_VULKAN=OFF -DNGP_BUILD_WITH_OPTIX=OFF"
    env:
      build_dir: "build"
      config: "Release"
      TCNN_CUDA_ARCHITECTURES: ${{ matrix.arch }}
    steps:
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install build-essential python3-dev libglfw3-dev libglew-dev libxinerama-dev libxcursor-dev libxi-dev
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - run: pip install -r requirements.txt
      - name: Install CUDA
        env:
          cuda: ${{ matrix.cuda }}
        run: ./dependencies/cuda-cmake-github-actions/scripts/actions/install_cuda_ubuntu.sh
        shell: bash
      - name: Install Vulkan SDK
        uses: humbletim/install-vulkan-sdk@v1.1.1
      - name: CMake
        run: cmake . -B ${{ env.build_dir }} ${{ matrix.cmake_flags }} -DCMAKE_BUILD_TYPE=${{ env.config }}
      - name: Build
        working-directory: ${{ env.build_dir }}
        run: cmake --build . --target all --verbose -j `nproc`
      - name: Upload Artifacts
      - uses: actions/upload-artifact@v2
        with:
          name: Compiled Binaries
          path: ${{ env.build_dir }}
